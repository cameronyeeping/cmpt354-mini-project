Researchers:
- r_id (Primary key)
- first_name
- last_name
- email
- organization

Calls for proposals:
- call_id/number (Primary key)
- title 
- app_deadline
- description
- area
- status

Grant proposals:
- proposal_id (Primary key)
- call_id (Foreign key - calls for proposals)
- amount_requested 
- principal_investigator (Foreign Key - Researchers)
- application_status 
- award_amount
- award_date

Proposal Collaborators:
- proposal_id (Foreign key - Grant proposal)
- collaborator_id (Foreign key - Researchers)

Reviewers:
- r_id (foreign key - reviewers)
- conflicts_of_interest (not sure how to implement)

Review Assignments:
- assignment_id (Primary Key)
- call_id (Foreign key - competitions)
- reviewer_id (Foreign key - reviewers)
- deadline
- status 

Co-Reviewers:
- assignment_id (Foreign key - review assignments)
- reviewer_id (Foreign key - reviewers)

Meetings:
- meeting_id (Primary key)
- meeting_date 

Meeting_Review_Assignments:
- meeting_id (Foreign Key - Meetings)
- assignment_id (Foreign Key - Review Assignments)

Assuming that competitions are the same as calls for proposals

We only need to consider the tables that are don't have foreign key dependencies.

Grant proposals:
proposal_id -> call_id, amount_requested, principal_investigator, application_status, award_amount, award_date
non-trivial, but proposal_id is a key

Reviewers:
r_id -> conflicts_of_interest (non-trivial) r_id is a key, so its BCNF

Collaborators:
(proposal_id, collaborator_id) -> (proposal_id, collaborator_id), trivial, so BCNF

Review assignments
assignment_id ->
